// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model MealPost {
  id        String  @id @default(cuid())
  foodId    String
  brandName String?
  name     String
  photoThumbnail String?
  createdAt     DateTime  @default(now()) @map(name: "created_at")
  user    User?@relation(fields:[userId], references:[id])
  userId  String
  category  String
  servingQty  Float
  servingUnit String
  calories  Int
  fat  Int
  saturatedFat  Int
  cholesterol Int
  sodium  Int
  carbohydrate Int
  fiber Int
  sugar Int
  protein Int  
  }

model Macro {
  id  String @id @default(cuid())
  userId  String 
  createdAt     DateTime  @default(now()) @map(name: "created_at")
  calories  Int
  fat    Int
  carbohydrate   Int
  protein    Int
}

model Account {
  id                 String  @id @default(cuid())
  userId             String  @map("user_id")
  type               String
  provider           String
  providerAccountId  String  @map("provider_account_id")
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?
  oauth_token_secret String?
  oauth_token        String?

  user User @relation(fields:[userId], references:[id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  }

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique@map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields:[userId], references:[id], onDelete: Cascade)
  }

model User {
  id            String    @id @default(cuid())
  name          String
  email         String    @unique
  emailVerified DateTime?
  password      String
  image         String?
  posts         MealPost[]
  accounts      Account[]
  sessions      Session[]
  }

model VerificationToken {
  id         Int      @id @default(autoincrement())
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])

  }
